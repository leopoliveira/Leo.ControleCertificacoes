// <auto-generated />
using System;
using Leo.ControleCertificacoes.Core.Infra.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Leo.ControleCertificacoes.Core.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240226094230_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Leo.ControleCertificacoes.Core.Domain.Entities.Certified", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Expiration")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("EmployeeId");

                    b.ToTable("Certifieds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4679709-46fc-4fe4-92bc-b227354abaa7"),
                            Code = 1,
                            Description = "Descrição 1",
                            EmployeeId = new Guid("e1e7e405-4690-42e8-8423-dd9ecd389bc7"),
                            Expiration = new DateOnly(2024, 2, 26),
                            Name = "Certified 1"
                        });
                });

            modelBuilder.Entity("Leo.ControleCertificacoes.Core.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfCertifieds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1e7e405-4690-42e8-8423-dd9ecd389bc7"),
                            Code = 1,
                            Department = "Manutenção",
                            Name = "Employee 1",
                            NumberOfCertifieds = 1
                        });
                });

            modelBuilder.Entity("Leo.ControleCertificacoes.Core.Domain.Entities.Certified", b =>
                {
                    b.HasOne("Leo.ControleCertificacoes.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("Certifieds")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Leo.ControleCertificacoes.Core.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Certifieds");
                });
#pragma warning restore 612, 618
        }
    }
}
